package {	import flash.events.EventDispatcher;    import flash.net.URLLoader;    import flash.net.URLLoaderDataFormat;    import flash.net.URLRequest;	import flash.system.System;	import flash.events.Event;	public class XMLloader extends EventDispatcher  {		public static const LOAD_COMPLETE:String = "load_complete";		var xmlLoader:URLLoader;		var my_xml:XML;				//コンストラクタ		function XMLloader(url:String, isUnicode:Boolean) {			//URLLoader作成			xmlLoader = new URLLoader();			xmlLoader.dataFormat = URLLoaderDataFormat.TEXT;			xmlLoader.addEventListener(Event.COMPLETE, onXMLloaded);			//URL			var urlReq:URLRequest = new URLRequest(url);			//Unicode以外ならばtrue			System.useCodePage = ! isUnicode;			//読み込み開始			xmlLoader.load(urlReq);		}		//読み込み完了		function onXMLloaded(event:Event):void {			try {				//XMLオブジェクトに変換する				my_xml = new XML(xmlLoader.data);				//カスタムイベントを配信する				dispatchEvent(new Event(LOAD_COMPLETE));			} catch (err:TypeError) {				trace(err.message);			}		}		//XMLオブジェクトを返す（他のクラスからのアクセスに対応）		public function getXML():XML{			return my_xml;		}	}}