package movie{	import com.flashdynamix.motion.TweensySequence;		import fl.motion.easing.*;		import flash.display.DisplayObjectContainer;	import flash.display.MovieClip;	import flash.filters.*;	import flash.text.TextField;	import flash.text.TextFormat;		//import flash.text.engine.TextBlock;	import flash.display.*;			public class TextTween	{		[Embed(source='font.swf', fontName='Gotham Book')]  		public static var font:Class;  		  		//[Embed(source='chukaisho.swf', fontName='Chukaisho')]  		//public static var chukaisho_font:Class;				var pageElement:XML;		var targetContainer:DisplayObjectContainer;				public var titleHolder:MovieClip;		public var subtitleHolder:MovieClip;		public var contentHolder:MovieClip;		public var captionHolder:MovieClip;				var stageW:uint;		var stageH:uint;		//コンストラクタ				public function TextTween(container:DisplayObjectContainer)		{			targetContainer = container;			stageW = targetContainer.stage.stageWidth;			stageH = targetContainer.stage.stageHeight;						//createTitleField(new MovieClip);			//this.createCaptionField(new MovieClip);			//this.createContentField(new MovieClip);			//this.createSubtitleField(new MovieClip);		}				public function createTextFields():void{			createTitleField(new MovieClip);			this.createCaptionField(new MovieClip);			this.createContentField(new MovieClip);			this.createSubtitleField(new MovieClip);				}		function createTextHolder(textHolder:MovieClip):void{			targetContainer.addChild(textHolder);			}//テキストフォルダにテキストフィールドを作成していれる				public function createTitleField(textHolder:MovieClip){			titleHolder = textHolder;			createTextHolder(textHolder);			titleHolder.x = stageW/4;			titleHolder.y = stageH/5;			}				public function createSubtitleField(textHolder:MovieClip){			subtitleHolder = textHolder;			createTextHolder(textHolder);			subtitleHolder.x = stageW*3/4;			subtitleHolder.y = stageH/6;		}				public function createContentField(textHolder:MovieClip){			contentHolder = textHolder;			createTextHolder(textHolder);			contentHolder.x = stageW*3/4;			contentHolder.y = stageH/4;			//contentHolder.graphics.beginFill(0x000000);		}		public function createCaptionField(textHolder:MovieClip){			captionHolder = textHolder;			createTextHolder(textHolder);			captionHolder.x = (stageW-captionHolder.width)/2;			trace("holder="+captionHolder.width.toString());			captionHolder.y = stageH/2;		}//テキストフィールドの作成		function createTextFeild(txt_cl:int,txt_size:uint,txt_pos:String):TextField{			var tf:TextField = new TextField();			tf.alpha = 0;			tf.selectable = false;			tf.embedFonts = true;			tf.autoSize = txt_pos;						//テキストのフォーマットを指定			var textFormat:TextFormat = new TextFormat();			textFormat.size = txt_size;			textFormat.color= txt_cl;			textFormat.font = "Gotham Book";			tf.defaultTextFormat = textFormat;						// ドロップシャドウ			var filter :DropShadowFilter = new DropShadowFilter();			filter.alpha = 0.6;			filter.angle = 45;			filter.blurX = 5;			filter.blurY = 5;			filter.distance = 2;			filter.color = 0x000000;			var myFilters:Array = new Array();			myFilters.push(filter);			tf.filters = myFilters;						return tf;				}		public function getPageElement(element:XML){			pageElement = element;			trace (pageElement+"in texttween");		}		//ひとまとめのシークエンスにしてしまう		public function allTween():void{			var sequence:TweensySequence = new TweensySequence();			trace(pageElement.caption+"in allTween");			var caption:String = pageElement.@caption;			if (caption!=""){				var captionField:TextField = createTextFeild(0x000000,26,"center");				//新しいテキストホルダを作る？				captionHolder.addChild(captionField);				trace("width="+captionField.width.toString());				//ホルダの位置を変える				captionField.text = caption;				trace(pageElement.caption+"in allTween if");				captionHolder.x = (stageW-captionHolder.width)/2;				captionHolder.y = stageH/2;				sequence.push(captionField, {alpha:1}, 5,Sine.easeOut);				sequence.push(captionField, {alpha:0}, 5);			}						if(pageElement.contents!=""){				for each(var contentsEl:XML in pageElement.contents){					trace(contentsEl.@title+"in contents roop");					if (contentsEl.@title!=""){						var titleField:TextField = createTextFeild(0xFFFFFF,27,"center");						//var titleBlock = tategaki(contentsEl.@title);						titleField.text =contentsEl.@title;						trace(titleHolder);						titleHolder.addChild(titleField);						//titleHolder.addChild(titleBlock);						trace(contentsEl.@title +"in if");						sequence.push(titleField,{alpha:1},5);						//sequence.push(titleBlock,{alpha:1},5);					}					for each(var contentEl:XML in contentsEl.content ){						var subtitleField:TextField = createTextFeild(0xFFFFFF,18,"left");						subtitleHolder.addChild(subtitleField);						subtitleField.text = contentEl.@subtitle;						trace(contentEl.@subtitle);						var contentField:TextField = createTextFeild(0xFFFFFF,14,"left");						contentHolder.addChild(contentField);						contentField.text = contentEl.toString();						trace(contentEl.toString());						sequence.push([subtitleField,contentField],{alpha:1},5);						sequence.push([subtitleField,contentField],{alpha:0},5);						}					sequence.push(titleField,{alpha:0},5);				}			}			sequence.start();		}/*		public function fadeoutText(imgLoader:Loader):void{			var Timeline:TweensyTimeline = Tweensy.to([imgLoader,captionHolder,contentHolder,subtitleHolder,titleHolder], {alpha:0},1);		}*/		/*//text blockに関するclass		public function tategaki(msg:String):TextBlock{			// 設定値			var txtColor:uint = 0x000033, fontSize:uint = 24, BOX_HEIGHT:uint = fontSize * 10;			// フォント情報			var font:FontDescription = new FontDescription( "AXIS Std B", FontWeight.NORMAL, FontPosture.NORMAL, FontLookup.DEVICE, RenderingMode.CFF );			// 整列フォーマット情報			var format:ElementFormat = new ElementFormat( font, fontSize, txtColor );//font指定はなくていいかもしれない			format.locale = "ja";			// 段組			var textBlock :TextBlock = new TextBlock();			textBlock.lineRotation = TextRotation.ROTATE_90;// 字の整列方向（縦書き）			textBlock.textJustifier = new EastAsianJustifier("ja", LineJustification.UNJUSTIFIED );			// 文字情報設定			textBlock.content = new TextElement( msg, format );			// 実際に整形と配置			var i:uint = 0;			var textLine:TextLine = textBlock.createTextLine( null, BOX_HEIGHT );			while (textLine) {				addChild( textLine );				textLine.x = 480 - 28 * i++;				textLine.y = 10;				textLine = textBlock.createTextLine(textLine, BOX_HEIGHT );			}			return textBlock;		}				*/			public function setTextPosition(cstageW:uint,cstageH:uint):void{			titleHolder.x = cstageW/4;			titleHolder.y = cstageH/5;						subtitleHolder.x = cstageW*3/4;			subtitleHolder.y = cstageH/6;						contentHolder.x = cstageW*3/4;			contentHolder.y = cstageH/4;						trace(captionHolder.width.toString());						captionHolder.x = (cstageW-captionHolder.width)/2;			captionHolder.y = cstageH/2;		}	}}